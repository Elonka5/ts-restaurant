{"version":3,"file":"static/js/134.922541c0.chunk.js","mappings":"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","sources":["components/Hero/HeroStyled.ts","components/MenuSection/MenuSectionStyled.ts","assets/images/svg/Mint.svg","components/ReservationSection/ReservationSectionStyled.ts","components/ReservationForm/ReservationForm.tsx","components/ReservationSection/ReservationSection.tsx","components/Hero/AboutHero/AboutHeroStyled.ts","components/Hero/AboutHero/AboutHero.tsx","assets/images/svg/Tomato.svg","components/OurStorySection/OurStorySectionStyled.ts","components/OurStorySection/OurStorySection.tsx","components/StaffSection/StaffSectionStyled.ts","components/StaffSection/StaffSection.tsx","components/Video/Video.tsx","assets/images/svg/rosemary.svg","assets/images/svg/rosemary_second.svg","components/ProcessSection/ProcessSectionStyled.ts","components/ProcessSection/ProcessSection.tsx","pages/About.tsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HeroWrapper = styled.section`\n  /* position: relative; */\n  padding-top: 102px;\n  padding-bottom: 222px;\n  background-color: ${({ theme }) => theme.colors.primaryBackground};\n`;\n\nexport const MainImageWrap = styled.div`\n  position: absolute;\n  top: 126px;\n  right: 1px;\n  img {\n    width: 792px;\n  }\n`;\n\nexport const Title = styled.h1`\n  position: relative;\n  color: ${({ theme }) => theme.colors.white};\n  font-size: 148px;\n  font-weight: 700;\n  line-height: 152px;\n  width: 1057px;\n  margin-bottom: 50px;\n  z-index: 1;\n`;\n\nexport const Text = styled.p`\n  width: 565px;\n  color: ${({ theme }) => theme.colors.white};\n  font-family: Lato;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 140%; /* 33.6px */\n  letter-spacing: 0.48px;\n`;\n\nexport const SpicesImgWrapper = styled.div`\n  position: relative;\n  /* bottom: -42px;\n  right: 280px; */\n  display: flex;\n  flex-direction: row;\n  gap: 44px;\n  margin-left: 490px;\n  margin-bottom: 240px;\n  z-index: 2;\n\n  img {\n    width: 250px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const MainTextWrap = styled.div`\n  margin-bottom: 280px;\n`;\n\nexport const SecondWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 54px;\n\n  img {\n    width: 792px;\n  }\n\n  h2 {\n    color: ${({ theme }) => theme.colors.white};\n    width: 493px;\n    font-size: 68px;\n    font-weight: 700;\n    line-height: 84px;\n  }\n`;\n\nexport const SecondText = styled.p`\n  width: 565px;\n  color: ${({ theme }) => theme.colors.white};\n  font-family: Lato;\n  font-size: 24px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 140%; /* 33.6px */\n  letter-spacing: 0.48px;\n`;\n\nexport const PlanWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 344px;\n`;\n\nexport const ThirdWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 84px;\n\n  img {\n    width: 508px;\n  }\n\n  p {\n    width: 508px;\n  }\n`;\n","import styled from 'styled-components';\nimport menuimg from '../../assets/images/menu_background.png';\nimport menuimg2x from '../../assets/images/menu_background@2x.png';\n\nexport const SectionMenu = styled.section`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding-top: 176px;\n  padding-bottom: 218px;\n  background-image: url(${menuimg});\n  background-repeat: no-repeat;\n  background-position: top right;\n\n  /* @media (min-device-pixel-ratio: 2),\n    (-webkit-min-device-pixel-ratio: 2),\n    (min-resolution: 192dpi),\n    (min-resolution: 2dppx) {\n    background-image: url(${menuimg2x});\n    background-size: cover;\n  } */\n`;\n\nexport const TitleMenu = styled.h2`\n  font-size: 108px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 120px;\n`;\n\nexport const TitleMenuWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  margin-bottom: 158px;\n`;\n\nexport const ListMenu = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 108px 60px;\n\n  li {\n    width: 792px;\n    /* > *:not(:first-child) {\n      margin-bottom: 24px;\n    }\n\n    > :first-child {\n      margin-bottom: 12px;\n    }\n    > :last-child {\n      margin-bottom: 0;\n    } */\n  }\n\n  h3 {\n    font-size: 68px;\n    font-style: normal;\n    font-weight: 700;\n    line-height: 84px;\n  }\n  /* p {\n    color: ${({ theme }) => theme.colors.grey};\n  } */\n\n  div {\n    height: 8px;\n    background-image: radial-gradient(black 15%, transparent 16%);\n    background-size: 8px 8px;\n    background-position: 0 0;\n  }\n`;\n\nexport const PriceText = styled.p`\n  font-size: 48px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 64px;\n  text-align: right;\n  color: ${({ theme }) => theme.colors.black};\n`;\n\n/* height: 0.5em;\n    background-image: radial-gradient(grey 15%, transparent 16%),\n      radial-gradient(grey 15%, transparent 16%);\n    background-size: 0.5em 0.5em;\n    background-position: 0 0, 0.5em 0.5em; */\n\nexport const DottsLine = styled.div`\n  height: 8px;\n  background-image: radial-gradient(black 15%, transparent 16%);\n  background-size: 8px 8px;\n  background-position: 0 0;\n`;\n\nexport const SecondTitleMenu = styled.h3`\n  font-size: 68px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: 84px;\n`;\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgMint(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 513,\n    height: 349,\n    viewBox: \"0 0 513 349\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M263.71 178.073C263.71 178.073 262.82 144.503 284.99 133.626C307.16 122.749 310.71 123.73 310.71 123.73C310.71 123.73 315.14 133.626 312.48 137.401C309.82 141.187 308.1 136.399 308.1 135.514C308.1 134.629 313.42 125.767 327.05 125.767C340.68 125.767 347.83 133.04 347.83 133.04C347.83 133.04 347.66 140.483 343.84 143.853C343.84 143.853 349.33 136.58 358.14 137.113C358.14 137.113 370.44 147.926 374.6 155.903C374.6 155.903 363.96 171.685 345 173.456C345 173.456 354.64 175.407 357.14 178.062C357.14 178.062 323.72 191.008 317.07 184.973C310.42 178.937 320.06 179.118 322.89 182.136C325.72 185.154 331.37 193.834 331.37 193.834C331.37 193.834 304.27 201.459 298.95 187.98L300.45 198.622C300.45 198.622 274.84 193.482 267.36 184.791C259.88 176.1 285.15 163.154 298.12 159.966C311.09 156.777 336.53 154.474 344.18 156.063M257.06 174.522C257.06 174.522 244.09 148.993 217.16 146.508C217.16 146.508 213.17 155.37 218.49 160.52C218.49 160.52 208.85 141.549 175.92 150.411C175.92 150.411 181.91 165.66 186.23 165.308C190.55 164.957 191.05 158.569 186.4 158.398C181.74 158.217 162.04 158.313 151.32 170.63C151.32 170.63 159.63 177.369 166.28 176.303C166.28 176.303 153.98 177.369 143.67 205.383C143.67 205.383 166.28 215.663 178.59 211.056C178.59 211.056 174.27 224.535 169.28 225.239C169.28 225.239 197.21 224.173 200.37 213.893C203.53 203.613 193.22 207.505 193.89 210.704C194.56 213.904 201.54 225.239 201.54 225.239C201.54 225.239 219.83 226.306 228.14 211.056C228.14 211.056 230.47 220.632 226.48 223.821C226.48 223.821 260.4 200.062 259.4 181.624C258.4 163.186 185.55 183.768 177.71 192M195.2 164.957C195.2 164.957 216.15 170.982 215.49 182.328M233.78 182.328C233.78 182.328 229.79 197.577 211.5 201.48M325.89 142.136C325.89 142.136 305.69 149.238 303.99 161.171M287.98 169.563C287.98 169.563 315.25 173.114 328.88 168.145M281.89 127.953C281.89 127.953 297.41 103.842 288.98 84.4552C288.98 84.4552 278.34 88.7101 278.34 92.4958C278.34 92.4958 287.21 54.2019 274.35 36.7025C274.35 36.7025 267.7 39.5391 266.81 45.6815C266.81 45.6815 247.74 15.8974 240.21 12.5809C240.21 12.5809 236 20.6215 237.55 30.3149C237.55 30.3149 225.8 4.30579 212.28 1C212.28 1 207.18 10.6934 208.95 17.3157C208.95 17.3157 186.78 1.47987 179.24 7.15304C179.24 7.15304 172.59 26.3053 179.24 36.2333C179.24 36.2333 174.58 34.3458 170.82 36.9478C170.82 36.9478 167.27 62.0078 189 76.9052C189 76.9052 178.58 75.4869 177.69 78.7927C176.8 82.0985 181.24 99.3633 204.74 110.24C204.74 110.24 193.88 110.71 193.21 112.608C193.21 112.608 207.84 138.617 216.04 142.157M260.6 160.105C260.6 160.105 213.6 59.8644 209.61 45.6815C205.62 31.4986 223.8 31.264 228.45 42.6103C236.82 63.0316 228.45 98.4569 228.45 98.4569M265.26 92.7304C265.26 92.7304 264.59 127.015 251.29 136.228M251.29 204.317C251.29 204.317 234.77 223.106 236.77 239.774C236.77 239.774 251.73 241.907 255.39 237.289C255.39 237.289 240.43 246.514 240.76 277.002C240.76 277.002 250.07 278.068 255.39 270.614C255.39 270.614 240.76 285.149 253.06 312.459C253.06 312.459 263.36 305.015 263.7 297.21C263.7 297.21 258.38 315.295 276.01 334.8C276.01 334.8 281.66 332.315 283.66 323.453C283.66 323.453 293.64 340.825 308.6 347.564C308.6 347.564 323.56 335.503 322.23 309.622C322.23 309.622 329.55 314.592 336.53 316.01C336.53 316.01 345.84 298.639 338.53 275.935C338.53 275.935 346.84 282.323 350.5 280.19C350.5 280.19 345.18 242.6 327.89 235.509C327.89 235.509 337.87 236.575 339.86 233.738C339.86 233.738 329.18 201.47 309.27 198.633M265.26 190.134C265.26 190.134 280.36 203.25 291.49 246.514C302.62 289.777 306.61 302.893 302.29 308.929C297.97 314.965 286.66 314.602 287.33 305.378C288 296.154 288.66 261.048 301.3 253.253M287.98 212.475C287.98 212.475 275.01 222.051 272.02 240.489C269.03 258.926 270.02 267.799 270.02 267.799M296.3 101.475C296.3 101.475 304.95 80.6696 324.23 71.5733C324.23 71.5733 329.55 73.7061 330.22 86.524C330.22 86.524 340.2 58.926 363.47 56.7932C386.75 54.6605 390.74 61.0481 390.74 61.0481C390.74 61.0481 402.38 83.0796 390.74 78.9207C379.1 74.7618 398.06 63.1809 408.03 63.8847C418 64.5885 447.27 73.3435 461.9 92.7304L455.25 108.566C455.25 108.566 473.21 101.475 478.53 102.893C483.85 104.311 510.45 140.014 512.45 160.105C512.45 160.105 492.5 185.175 464.56 185.879C464.56 185.879 461.23 195.796 467.22 202.888C467.22 202.888 408.14 210.214 421.11 197.449C434.08 184.685 423.11 218.02 427.32 225.25C427.32 225.25 389.74 233.386 374.61 217.785L368.79 231.968C368.79 231.968 348.58 229.377 335.54 212.464M481.85 146.508C434.63 130.555 381.42 144.162 381.42 144.162C381.42 144.162 386.08 173.093 425.32 179.491M437.29 107.148C437.29 107.148 416.01 117.119 413.35 142.637M374.61 89.4139C374.61 89.4139 360.14 97.721 353.49 123.709M198.53 130.438C198.53 130.438 165.61 96.0362 134.89 111.627L140.17 121.757C140.17 121.757 121.04 108.875 91.36 115.956C61.68 123.037 61.02 138.393 61.02 138.393C61.02 138.393 71.36 157.695 75.53 147.67C79.7 137.646 53.1 146.711 45.85 150.55C38.59 154.389 20.13 170.406 16.17 183.192C16.17 183.192 37.94 184.461 38.6 187.02C39.26 189.579 5.62 198.537 1 232.139C1 232.139 12.21 244.615 30.68 249.734C30.68 249.734 45.85 247.943 47.17 242.44C47.17 242.44 46.29 254 42.99 257.092C42.99 257.092 50.9 265.73 76.19 269.356C76.19 269.356 107.5 261.454 98.1 256.068C88.7 250.683 95.88 274.272 90.7 280.873C90.7 280.873 105.87 292.389 136.65 287.271C136.65 287.271 151.16 282.792 156.44 272.128C156.44 272.128 158.42 285.351 156.66 289.83C156.66 289.83 206.13 280.446 209.87 254.842C213.61 229.238 214.49 259.108 214.49 262.733C214.49 262.733 237.79 250.15 239.99 237.343M138.67 192.725C138.67 192.725 72.61 193.194 25.61 227.244M44.67 179.491C44.67 179.491 88.57 185.079 101.87 204.509M135.57 204.509C135.57 204.509 132.47 221.571 108.97 244.743M104.53 150.646C104.53 150.646 116.94 148.278 135.57 150.646C154.19 153.013 158.18 159.123 158.18 159.123\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgMint);\nexport default __webpack_public_path__ + \"static/media/Mint.673427b9b8f0fe66fe7cc4932288c2af.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport mintsvg from '../../assets/images/svg/Mint.svg';\n\nexport const ReservationSect = styled.section`\n  background-color: ${({ theme }) => theme.colors.lightOlive};\n  padding-top: 214px;\n  padding-bottom: 174px;\n  background-image: url(${mintsvg});\n  background-repeat: no-repeat;\n  background-position: top 50px left 159px;\n`;\n\nexport const ReservWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  margin-right: auto;\n  margin-left: auto;\n  margin-bottom: 116px;\n  width: 985px;\n\n  p {\n    color: ${({ theme }) => theme.colors.grey};\n  }\n`;\n","import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport {\n  CalendarGlobalStyles,\n  FormWrapper,\n  StyledBtn,\n  StyledDateWrapper,\n  StyledError,\n  StyledSelect,\n  WrapperInput,\n  WrapperInputs,\n} from './ReservationFormStyled';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { validationBooking } from '../../helpers/schemas';\nimport { sendUserReservation } from '../../redux/User/UserThunk';\nimport { Formik } from 'formik';\nimport { useAppDispatch } from '../../hook';\nimport Input from '../Input/Input';\n\ninterface ReservationFormValues {\n  firstName: string;\n  lastName: string;\n  email: string;\n  phone: string;\n  date: Date;\n  time: string;\n  numberOfPeople: number;\n}\n\nconst initialValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  phone: '',\n  date: new Date(),\n  time: '',\n  numberOfPeople: 1,\n};\n\nconst ReservationForm: React.FC = () => {\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedTime, setSelectedTime] = useState(new Date());\n\n  const dispatch = useAppDispatch();\n\n  const handleSubmit = async (\n    values: ReservationFormValues,\n    { resetForm }: { resetForm: () => void }\n  ) => {\n    const userData = {\n      ...values,\n      date: selectedDate,\n      time: selectedTime.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n      }),\n    };\n\n    dispatch(sendUserReservation(userData));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      onSubmit={handleSubmit}\n      initialValues={initialValues}\n      validationSchema={validationBooking}\n    >\n      {({ errors, touched }) => {\n        return (\n          <FormWrapper>\n            <WrapperInputs>\n              <WrapperInput>\n                <Input\n                  variant=\"primary\"\n                  type=\"text\"\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  placeholder=\"First Name\"\n                  $error={errors.firstName && touched.firstName ? 'true' : ''}\n                />\n                <StyledError name=\"firstName\" component=\"span\" />\n              </WrapperInput>\n              <WrapperInput>\n                <Input\n                  variant=\"primary\"\n                  type=\"text\"\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  placeholder=\"Last Name\"\n                  $error={errors.lastName && touched.lastName ? 'true' : ''}\n                />\n                <StyledError name=\"lastName\" component=\"span\" />\n              </WrapperInput>\n            </WrapperInputs>\n\n            <WrapperInput>\n              <Input\n                variant=\"secondary\"\n                type=\"email\"\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"Email\"\n                $error={errors.email && touched.email ? 'true' : ''}\n              />\n              <StyledError name=\"email\" component=\"span\" />\n            </WrapperInput>\n\n            <WrapperInput>\n              <Input\n                variant=\"secondary\"\n                type=\"tel\"\n                id=\"phone\"\n                name=\"phone\"\n                placeholder=\"Phone\"\n                $error={errors.phone && touched.phone ? 'true' : ''}\n              />\n              <StyledError name=\"phone\" component=\"span\" />\n            </WrapperInput>\n            <WrapperInputs>\n              <StyledDateWrapper>\n                <DatePicker\n                  selected={selectedDate}\n                  onChange={(date: Date) => setSelectedDate(date)}\n                  minDate={new Date()}\n                  dateFormat=\"dd/MM/yyyy\"\n                />\n                <CalendarGlobalStyles />\n              </StyledDateWrapper>\n\n              <DatePicker\n                selected={selectedTime}\n                onChange={(date: Date) => setSelectedTime(date)}\n                showTimeSelect\n                showTimeSelectOnly\n                timeIntervals={30}\n                dateFormat=\"h:mm aa\"\n                timeCaption=\"Time\"\n                minTime={new Date()}\n                maxTime={new Date(new Date().setHours(21, 0, 0, 0))}\n              />\n            </WrapperInputs>\n            <StyledSelect id=\"numberOfPeople\" name=\"numberOfPeople\">\n              {[1, 2, 3, 4, 5, 6].map(num => (\n                <option key={num} value={num}>\n                  {num}\n                </option>\n              ))}\n            </StyledSelect>\n\n            <StyledBtn type=\"submit\">Book now</StyledBtn>\n          </FormWrapper>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default ReservationForm;\n","import Container from '../Container/Container';\nimport { ReservWrap, ReservationSect } from './ReservationSectionStyled';\nimport { Text } from '../Hero/HeroStyled';\nimport { TitleMenu } from '../MenuSection/MenuSectionStyled';\nimport ReservationForm from '../ReservationForm/ReservationForm';\n\nconst ReservationSection = () => {\n  return (\n    <ReservationSect id=\"reservations\">\n      <Container variant=\"other\">\n        <ReservWrap>\n          <TitleMenu>Make a Reservation</TitleMenu>\n          <Text>Get in touch with restaurant</Text>\n        </ReservWrap>\n        <ReservationForm />\n      </Container>\n    </ReservationSect>\n  );\n};\n\nexport default ReservationSection;\n","import styled from 'styled-components';\nimport heroAboutImg from '../../../assets/images/hero_contact_img.jpg';\n\nexport const HeroAboutSection = styled.section`\n  margin-top: -294px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0.46), rgba(0, 0, 0, 0.46)),\n    url(${heroAboutImg});\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-top: 142px;\n  padding-bottom: 130px;\n  width: 100%;\n  height: 1080px;\n  color: ${({ theme }) => theme.colors.white};\n`;\n","import React from 'react';\nimport { HeroAboutSection } from './AboutHeroStyled';\nimport Container from '../../Container/Container';\nimport { Text, Title } from '../HeroStyled';\n\nexport const AboutHero = () => {\n  return (\n    <HeroAboutSection>\n      <Container variant=\"other\">\n        <Title>Who We Are</Title>\n        <Text>\n          The most important thing for us is to give you the comfortable dining\n          experience\n        </Text>\n      </Container>\n    </HeroAboutSection>\n  );\n};\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTomato(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 353,\n    height: 299,\n    viewBox: \"0 0 353 299\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M253.824 51.3017C253.824 51.3017 251.485 47.8254 266.151 31.0671C280.817 14.3089 310.625 30.0696 310.625 30.0696C310.625 30.0696 288.314 11.7728 266.125 10.5033C243.935 9.23383 228.191 37.7274 225.614 45.6047C223.034 53.4732 229.438 51.7595 236.977 45.7147C244.516 39.6699 233.476 1.81028 233.476 1.81028C233.476 1.81028 220.364 18.9235 205.915 42.2719C191.466 65.6203 183.361 69.0227 177.285 74.9991C171.217 80.9724 158.313 85.7847 151.37 83.731C144.428 81.6774 127.745 61.9384 101.047 59.9964C74.3492 58.0545 51.9056 68.2329 51.9056 68.2329C51.9056 68.2329 76.0255 68.8619 88.0698 75.307C100.114 81.7521 97.4952 93.1381 104.694 94.6512C111.893 96.1643 120.466 81.6962 108.413 82.4603C96.3601 83.2243 62.8205 81.6332 52.0146 96.2121C41.2086 110.791 18.9226 130.995 0.855099 131.832C0.855099 131.832 42.0233 133.37 59.9304 117.661C77.8374 101.953 104.969 110.195 104.969 110.195L142.797 105.919C142.797 105.919 160.05 102.267 156.535 77.6274C153.02 52.9874 155.262 32.9723 160.491 32.0889L176.477 34.5799C176.477 34.5799 164.357 45.3373 174.718 68.4405C185.079 91.5437 188.285 89.0518 188.285 89.0518M172.169 99.4968C186.751 93.4779 212.22 63.2474 240.565 53.6865C278.065 41.0407 327.917 59.9291 347.51 124.453C365.552 183.873 329.128 255.731 247.425 283.36C153.384 315.156 88.134 294.576 55.2068 222.511C29.7749 166.826 55.259 126.195 82.9941 115.102C108.64 104.842 144.719 110.829 172.169 99.4968ZM112.114 128.045C139.163 117.618 161.774 125.971 173.551 147.61C180.827 160.983 197.694 206.879 202.759 222.24C207.824 237.602 211.339 263.575 178.526 272.43C148.616 280.494 126.872 273.023 107.246 251.798C87.7693 230.74 68.1091 193.988 75.5816 166.08C83.0541 138.172 96.9549 133.893 112.114 128.045ZM244.087 80.7625C259.088 75.7077 290.091 71.1446 302.858 94.4144C315.616 117.687 329.806 162.373 320.626 189.534C311.449 216.703 285.546 250.446 250.03 236.954C223.162 226.748 199.373 129.916 205.881 113.3C215.217 89.4734 244.087 80.7625 244.087 80.7625ZM136.381 140.006C132.462 142.087 129.274 146.882 136.789 155.239C145.278 164.669 153.141 164.616 151.358 154.269C149.234 141.884 141.984 137.032 136.381 140.006ZM231.437 106.397C226.972 107.003 222.115 110.387 225.818 120.719C229.999 132.38 237.34 134.991 239.764 124.766C242.659 112.507 237.821 105.529 231.437 106.397ZM274.814 100.774C270.51 99.5098 264.546 100.582 263.001 111.369C261.256 123.546 266.619 128.876 273.622 120.673C282.023 110.823 280.967 102.58 274.814 100.774ZM303.449 146.812C303.575 142.623 300.822 137.598 289.217 139.209C276.115 141.017 272.075 147.275 282.514 151.25C295.029 156.016 303.272 152.804 303.449 146.812ZM297.894 188.753C300.362 185.246 300.843 179.625 290.048 175.365C277.863 170.547 270.896 173.921 277.548 182.381C285.525 192.516 294.368 193.771 297.894 188.753ZM273.562 224.336C277.383 222.111 280.351 217.191 272.471 209.126C263.568 200.023 255.72 200.387 257.96 210.649C260.638 222.955 268.098 227.529 273.562 224.336ZM102.351 160.92C99.1262 163.852 97.3509 169.238 106.893 175.569C117.67 182.718 125.258 180.822 120.725 171.224C115.303 159.734 106.967 156.729 102.351 160.92ZM98.8028 212.066C99.6355 216.179 103.484 220.548 114.455 216.694C126.838 212.343 129.358 205.433 118.246 203.6C104.919 201.407 97.6026 206.173 98.8028 212.066ZM128.045 248.047C131.452 250.799 137.383 252.009 143.414 242.681C150.226 232.143 147.581 225.275 137.638 230.234C125.737 236.17 123.178 244.12 128.045 248.047ZM166.015 260.742C170.033 262.636 176.109 262.474 179.515 252.067C183.36 240.307 178.998 234.245 170.649 241.293C160.645 249.738 160.25 258.025 166.015 260.742Z\",\n    stroke: \"black\",\n    strokeMiterlimit: 10\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTomato);\nexport default __webpack_public_path__ + \"static/media/Tomato.88414d67673825197e821009ec71971e.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport tomatosvg from '../../assets/images/svg/Tomato.svg';\n\nexport const StorySection = styled.section`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding-top: 218px;\n  padding-bottom: 117px;\n  background-image: url(${tomatosvg});\n  background-repeat: no-repeat;\n  background-position: top 94px right 860px;\n`;\n\nexport const StoryContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 107px;\n`;\n\nexport const StoryWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  padding-left: 77px;\n  padding-top: 233px;\n\n  p {\n    width: 668px;\n    color: #4d4d4d;\n  }\n`;\n","import React from 'react';\nimport Container from '../Container/Container';\nimport {\n  StoryContainer,\n  StorySection,\n  StoryWrap,\n} from './OurStorySectionStyled';\nimport { TitleMenu } from '../MenuSection/MenuSectionStyled';\nimport { Text } from '../Hero/HeroStyled';\nimport storyImgWebp from '../../assets/images/story_photo_webp.webp';\nimport storyImgWebpMob from '../../assets/images/story_photo_webp@2x.webp';\nimport storyImg from '../../assets/images/story_photo.jpg';\nimport storyImgMob from '../../assets/images/story_photo@2x.jpg';\n\nexport const OurStorySection = () => {\n  return (\n    <StorySection>\n      <Container variant=\"other\">\n        <StoryContainer>\n          <StoryWrap>\n            <TitleMenu>Our Story</TitleMenu>\n            <Text>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus\n              lorem id penatibus imperdiet. Turpis egestas ultricies purus\n              auctor tincidunt lacus nunc.{' '}\n            </Text>\n          </StoryWrap>\n          <picture>\n            <source\n              media=\"(min-width: 320px)\"\n              srcSet={`${storyImgWebp} 1x, ${storyImgWebpMob} 2x`}\n              type=\"image/webp\"\n            />\n            <source\n              media=\"(min-width: 320px)\"\n              srcSet={`${storyImg} 1x, ${storyImgMob} 2x`}\n              type=\"image/png\"\n            />\n            <img src={storyImg} alt=\"hero_image\" loading=\"lazy\" />\n          </picture>\n        </StoryContainer>\n      </Container>\n    </StorySection>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SectionStaff = styled.section`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.white};\n  padding-top: 162px;\n  padding-bottom: 299px;\n`;\n\nexport const StaffContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 121px;\n`;\n\nexport const FirstContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n  text-align: center;\n\n  p {\n    color: #4d4d4d;\n    width: 143px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const FirstWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 726px;\n  gap: 449px;\n`;\n\nexport const ThirdHeading = styled.h3`\n  font-weight: 700;\n  font-size: 68px;\n  line-height: 84px;\n`;\n","import {\n  FirstContainer,\n  FirstWrap,\n  SectionStaff,\n  StaffContainer,\n  ThirdHeading,\n} from './StaffSectionStyled';\nimport Container from '../Container/Container';\nimport managerImgWebp from '../../assets/images/photo_manager_webp.webp';\nimport managerImgWebpMob from '../../assets/images/photo_manager_webp@2x.webp';\nimport managerImg from '../../assets/images/photo_manager.jpg';\nimport managerImgMob from '../../assets/images/photo_manager@2x.jpg';\nimport chefImgWebp from '../../assets/images/chef_photo_webp.webp';\nimport chefImgWebpMob from '../../assets/images/chef_photo_webp@2x.webp';\nimport chefImg from '../../assets/images/chef_photo.jpg';\nimport chefImgMob from '../../assets/images/chef_photo@2x.jpg';\nimport { Text } from '../Hero/HeroStyled';\n\nexport const StaffSection = () => {\n  return (\n    <SectionStaff>\n      <Container variant=\"other\">\n        <StaffContainer>\n          <FirstWrap>\n            <FirstContainer>\n              <ThirdHeading>Restaurant Manager</ThirdHeading>\n              <Text>Carson Hugn</Text>\n              <picture>\n                <source\n                  media=\"(min-width: 320px)\"\n                  srcSet={`${managerImgWebp} 1x, ${managerImgWebpMob} 2x`}\n                  type=\"image/webp\"\n                />\n                <source\n                  media=\"(min-width: 320px)\"\n                  srcSet={`${managerImg} 1x, ${managerImgMob} 2x`}\n                  type=\"image/png\"\n                />\n                <img src={managerImg} alt=\"hero_image\" loading=\"lazy\" />\n              </picture>\n            </FirstContainer>\n\n            <Text\n              style={{\n                color: '#4D4D4D',\n                marginLeft: 'auto',\n                textAlign: 'end',\n                width: '510px',\n              }}\n            >\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et in sed\n              in pellentesque ornare nunc nisl. Augue habitant accumsan, ut\n              parturient orci ac etiam congue mi.{' '}\n            </Text>\n          </FirstWrap>\n          <FirstWrap style={{ gap: '329px' }}>\n            <Text\n              style={{ marginTop: '160px', color: '#4D4D4D', width: '510px' }}\n            >\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Et in sed\n              in pellentesque ornare nunc nisl.\n            </Text>\n\n            <FirstContainer>\n              <ThirdHeading>Executive Chef</ThirdHeading>\n              <p>Jane Cooper</p>\n              <picture>\n                <source\n                  media=\"(min-width: 320px)\"\n                  srcSet={`${chefImgWebp} 1x, ${chefImgWebpMob} 2x`}\n                  type=\"image/webp\"\n                />\n                <source\n                  media=\"(min-width: 320px)\"\n                  srcSet={`${chefImg} 1x, ${chefImgMob} 2x`}\n                  type=\"image/png\"\n                />\n                <img src={chefImg} alt=\"hero_image\" loading=\"lazy\" />\n              </picture>\n            </FirstContainer>\n          </FirstWrap>\n        </StaffContainer>\n      </Container>\n    </SectionStaff>\n  );\n};\n\n//style={{ gap: '329px' }}\n","import React from 'react';\n\nconst Video = () => {\n  return (\n    <section>\n      <div style={{ padding: '56.25% 0 0 0', position: 'relative' }}>\n        <iframe\n          title=\"Vimeo Video Player\"\n          src=\"https://player.vimeo.com/video/355115765?h=2838806a8f\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n          }}\n          frameBorder=\"0\"\n          allow=\"autoplay; fullscreen; picture-in-picture\"\n          allowFullScreen\n        ></iframe>\n      </div>\n      <script src=\"https://player.vimeo.com/api/player.js\"></script>\n    </section>\n  );\n};\n\nexport default Video;\n","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRosemary(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 468,\n    height: 548,\n    viewBox: \"0 0 468 548\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M684.758 24.4479C684.758 24.4479 542.303 53.519 375.375 160.753C208.447 267.987 166.645 351.607 166.645 351.607M537.427 66.0656C537.427 66.0656 519.267 51.1703 504.71 45.0723C490.153 38.9742 460.592 28.9048 453.206 25.3918C445.831 21.8814 418.357 -4.05108 415.506 2.34375C412.655 8.73858 427.394 29.0171 438.088 33.3117C448.781 37.6064 456.222 38.9266 469.964 45.2704C483.705 51.6141 505.256 67.3373 509.221 68.2478C515.699 69.7392 518.783 63.0007 511.966 60.4994C505.149 57.998 491.933 62.2885 483.814 62.4155C475.694 62.5425 388.293 52.4746 377.34 49.4473C366.387 46.42 339.705 52.4838 374.406 63.7815C409.108 75.0793 462.21 70.6361 491.816 76.0658C521.419 81.5081 521.419 81.5081 521.419 81.5081M549.952 69.1189C549.811 69.524 491.22 109.063 460.31 150.799C429.4 192.536 467.822 157.438 474.519 151.062C481.227 144.688 500.733 128.531 518.497 113.291C528.679 104.563 538.867 98.2947 546.443 93.8005M546.443 93.8005C549.531 83.1302 549.141 77.0456 555.342 76.4917C562.546 75.8558 561.834 82.4506 557.945 86.3812C556.28 88.0603 552.081 90.4429 546.443 93.8005ZM546.443 93.8005C544.196 101.547 541.882 110.873 539.477 119.565C537.288 127.485 535.023 134.869 532.683 140.069C524.216 158.835 481.765 208.008 473.68 221.112C465.603 234.23 431.754 282.793 436.583 287.468C441.412 292.144 452.705 272.717 457.124 266.254C460.855 260.772 521.504 177.806 548.274 132.048M548.274 132.048C553.165 123.677 556.927 116.568 558.997 111.383C567.542 90.0312 571.241 70.9352 572.803 59.9041M548.274 132.048C546.014 138.901 542.381 148.38 536.534 160.856C522.16 191.487 479.091 249.35 475.308 254.634C471.522 259.931 454.741 294.843 483.356 260.523C511.974 226.19 536.289 184.662 542.462 173.312C548.648 161.952 556.722 148.846 563.716 122.211C570.706 95.589 566.806 91.1328 566.806 91.1328M543.599 104.13C543.599 104.13 469.108 179.373 458.767 201.682C448.418 223.977 439.671 242.238 468.01 207.401C496.348 172.564 514.377 148.551 520.256 142.433C526.135 136.315 539.486 119.58 539.486 119.58M497.574 77.108C481.944 85.093 443.015 104.764 426.803 111.057C406.271 119.027 376.942 132.357 361.748 134.984C346.553 137.611 312.054 142.266 350.835 128.02C389.608 113.759 425.726 99.3229 438.404 93.922C442.862 92.026 447.749 88.7165 452.424 85.53M452.424 85.53C461.022 79.6696 468.847 74.238 471.821 78.8604C473.396 81.3055 464.87 83.5289 452.424 85.53ZM452.424 85.53C428.633 89.3672 390.504 92.3799 381.203 94.5397C367.034 97.821 322.585 105.877 307.205 107.543C291.824 109.21 269.683 111.895 269.683 111.895C269.683 111.895 230.78 109.796 269.516 99.5123C308.262 89.2314 410.226 77.0974 410.226 77.0974L431.698 71.9549L431.712 71.9448M423.448 197.028C414.626 217.412 399.082 254.383 384.147 294.952C361.566 356.329 367.288 345.311 353.33 379.574C339.386 413.828 342.779 385.916 345.784 376.9C348.786 367.897 356.036 340.007 362.032 321.986C365.273 312.268 375.65 285.702 386.606 257.891M423.448 197.028C423.956 195.169 424.499 193.198 425.072 191.074C436.188 149.961 440.243 130.152 440.243 130.152C440.243 130.152 423.482 138.56 393.612 182.748C363.751 226.952 356.467 245.546 352.282 254.721C348.085 263.894 338.572 300.975 360.073 261.864C381.573 222.767 399.951 196.085 408.597 185.852C411.413 182.518 415.253 177.978 418.963 173.221M423.448 197.028C414.021 231.247 414.164 224.092 398.458 274.033C381.897 326.681 404.003 284.618 407.65 276.205C411.307 267.795 426.874 223.748 435.31 188.193C442.2 159.115 448.102 127.385 450.02 116.771M386.606 257.891C386.609 257.879 386.611 257.866 386.611 257.866M386.606 257.891C380.119 265.792 370.602 278.411 362.695 292.911C349.277 317.51 340.139 344.196 319.242 380.353C298.345 416.511 308.844 384.074 312.126 375.576C315.407 367.077 347.481 295.122 368.549 264.306C380.763 246.439 391.48 234.755 398.339 228.098M386.606 257.891C386.606 257.891 386.622 257.868 386.611 257.866M386.611 257.866C390.549 247.861 394.567 237.69 398.339 228.098M398.339 228.098L398.342 228.085C403.558 214.835 408.331 202.676 411.862 193.466C414.868 185.633 417.15 178.904 418.963 173.221M418.963 173.221C425.071 153.91 425.61 146.69 429.831 149.747C433.71 152.551 426.629 163.354 418.963 173.221ZM387.937 152.8C378.674 153.64 362.272 155.198 345.301 157.153L345.29 157.15M345.29 157.15C331.243 158.759 316.827 160.64 305.765 162.623C305.765 162.623 305.765 162.623 305.754 162.62M345.29 157.15C329.798 152.957 296.207 144.964 254.382 141.443C196.381 136.57 165.334 160.164 160.508 163.009C155.684 165.842 145.634 175.399 164.165 169.614C182.707 163.832 194.827 155.495 235.323 155.42C264.624 155.37 292.541 160.042 305.754 162.62M305.754 162.62C302.564 163.195 299.66 163.784 297.117 164.366C269.609 170.673 181.453 201.975 166.594 208.627C151.735 215.28 117.626 242.561 171.084 222.497C224.552 202.436 252.272 193.229 261.623 188.955C263.808 187.97 269.406 186.622 276.672 185.058M276.672 185.058C288.114 182.58 303.67 179.547 316.372 176.464M276.672 185.058C253.541 199.72 208.117 228.181 178.068 244.916C136.282 268.177 153.858 272.783 186.016 256.959C209.855 245.24 279.903 197.487 316.372 176.464M316.372 176.464C330.207 173.117 340.68 169.706 338.896 166.866C337.739 165.038 329.1 169.122 316.372 176.464ZM341.615 183.267C339.859 194.85 336.24 215.932 331.088 232.04C323.593 255.461 296.33 352.868 284.194 382.022C272.059 411.175 265.205 420.185 275.368 379.935C285.53 339.686 305.681 280.831 310.314 263.802C314.955 246.789 322.05 225.041 322.05 225.041C322.05 225.041 246.409 348.111 242.193 355.512C237.976 362.913 202.824 402.318 237.502 343.362C272.171 284.39 292.55 250.768 308.261 224.878C315.242 213.374 321.111 202.829 325.486 194.655M233.161 270.971C229.748 298.014 220.192 370.375 211.2 405.188C200.03 448.494 185.128 494.904 183.363 499.789C181.587 504.671 160.863 539.979 175.956 494.504C191.049 449.029 202.844 419.556 211.662 369.954C217.474 337.193 221.526 301.133 223.611 280.407M215.009 289.296C206.715 286.365 185.35 280.213 156.17 282.165C118.258 284.684 67.5693 293.033 39.0401 298.66C10.5108 304.287 6.91278 316.259 45.4116 309.002C83.9078 301.758 124.476 297.647 142.232 295.652C159.985 293.67 180.348 294.058 189.52 294.459C195.428 294.712 202.8 296.428 207.3 297.612C203.369 314.952 165.585 450.956 148.351 486.212C131.106 521.466 135.85 498.285 138.49 489.183C141.116 480.091 152.391 443.865 166.296 406.068C180.203 368.258 191.202 325.788 191.786 321.064C192.076 318.74 191.671 317.887 189.796 318.095C187.88 318.28 184.426 319.576 178.587 321.478C173.766 323.049 165.959 325.668 156.7 328.928M156.7 328.928C143.843 333.449 128.206 339.2 113.988 345.101C89.5466 355.229 58.8219 367.844 23.402 393.939C-12.0179 420.033 1.83206 399.443 17.7915 385.544C33.751 371.644 52.0197 359.606 85.1701 344.601C118.32 329.596 162.365 314.11 177.349 310.583C184.842 308.819 192.733 307.827 198.785 307.265M156.7 328.928C146.79 338.823 130.3 354.803 117.722 364.532C98.4754 379.422 68.6548 398.894 48.4389 416.651C28.234 434.41 8.80471 463.394 6.26761 466.329C3.74157 469.266 -7.00692 495.439 14.1447 473.054C35.31 450.658 33.3883 450.643 57.0226 427.516C73.2215 411.653 110.959 382.279 141.528 360.114M176.294 336.136C168.065 341.273 155.556 349.93 141.528 360.114M141.528 360.114C131.308 371.862 118.582 388.147 107.924 406.741C86.1839 444.692 65.3864 486.48 48.3524 526.368C31.3184 566.255 55.5733 536.299 59.391 528.977C63.1977 521.652 76.2513 489.939 100.573 442.659C114.121 416.35 135.12 393.916 149.397 378.264M149.397 378.264C152.749 364.719 155.622 350.849 163.577 355.267C167.878 357.652 160.76 365.802 149.397 378.264ZM149.397 378.264C148.661 381.239 147.905 384.196 147.066 386.934C142.402 402.188 134.114 427.613 124.749 447.934C115.383 468.256 103.8 487.176 87.324 516.858C70.8369 546.537 87.6775 530.202 92.8178 523.896C97.9665 517.606 109.533 504.435 132.429 452.846C155.325 401.256 171.424 352.737 171.424 352.737\",\n    stroke: \"#233000\",\n    strokeMiterlimit: 10\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRosemary);\nexport default __webpack_public_path__ + \"static/media/rosemary.d6656cba804f5dbe40870df163c56a24.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgRosemarySecond(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 320,\n    height: 327,\n    viewBox: \"0 0 320 327\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M-271 77.4194C-271 77.4194 -160.785 67.1637 -17.5772 108.887C125.63 150.61 172.398 202.753 172.398 202.753M-154.793 75.297C-154.793 75.297 -144.317 60.3274 -134.797 52.6186C-125.276 44.9099 -105.499 30.9551 -100.749 26.736C-96.0062 22.5212 -80.8094 -2.6215 -77.4868 1.44278C-74.1642 5.50707 -81.094 23.6715 -88.1231 29.1986C-95.1523 34.7256 -100.364 37.3463 -109.238 45.0546C-118.112 52.7628 -130.92 69.0928 -133.657 70.6413C-138.128 73.1741 -141.688 68.9091 -137.162 65.5594C-132.636 62.2097 -122.105 62.4286 -116.116 60.7203C-110.128 59.012 -47.8684 32.2248 -40.4052 27.5711C-32.9421 22.9174 -12.1797 21.4508 -35.4966 37.4484C-58.8135 53.4459 -98.6694 61.9647 -119.371 72.5216C-140.069 83.0873 -140.069 83.0873 -140.069 83.0873M-163.406 80.3186C-163.224 80.585 -112.594 96.625 -81.8726 120.421C-51.1514 144.218 -86.1147 126.964 -92.2585 123.767C-98.4098 120.574 -115.841 113.035 -131.816 105.783C-140.971 101.631 -149.659 99.2881 -156.086 97.6682M-156.086 97.6682C-160.405 90.5163 -161.287 85.9608 -165.948 86.9299C-171.362 88.0611 -169.572 92.7469 -165.96 94.771C-164.414 95.6347 -160.873 96.4532 -156.086 97.6682ZM-156.086 97.6682C-152.948 102.86 -149.457 109.195 -146.02 115.046C-142.891 120.377 -139.809 125.298 -137.091 128.598C-127.267 140.503 -86.64 167.201 -78.1841 175.031C-69.7314 182.874 -35.54 211.032 -38.1887 215.537C-40.8374 220.043 -52.8642 208.28 -57.3513 204.514C-61.1451 201.315 -121.63 153.835 -150.083 126.167M-150.083 126.167C-155.284 121.103 -159.413 116.717 -161.929 113.368C-172.307 99.5811 -178.693 86.3763 -181.96 78.6208M-150.083 126.167C-147.106 130.699 -142.617 136.854 -135.926 144.721C-119.484 164.029 -76.7331 196.972 -72.9391 200.013C-69.1408 203.064 -50.1082 224.982 -77.7192 206.124C-105.334 187.257 -131.172 162.151 -137.886 155.184C-144.613 148.213 -153.061 140.379 -163.315 122.368C-173.564 104.365 -171.555 100.227 -171.555 100.227M-152.013 104.624C-152.013 104.624 -82.8446 143.36 -70.9635 157.452C-59.0791 171.53 -49.1462 183.003 -76.6532 163.703C-104.16 144.404 -122.016 130.767 -127.509 127.578C-133.002 124.389 -146.023 115.059 -146.023 115.059M-123.4 74.5651C-110.386 76.9619 -78.014 82.7726 -64.8979 83.7977C-48.2865 85.0951 -24.1839 88.3787 -12.519 86.9368C-0.854175 85.4949 25.379 81.2589 -5.84186 79.4006C-37.0594 77.5292 -66.3612 74.9399 -76.7105 73.786C-80.3492 73.3826 -84.5741 72.0361 -88.6206 70.7331M-88.6206 70.7331C-96.0612 68.3364 -102.853 66.0833 -104.148 70.1381C-104.836 72.2835 -98.1464 72.0249 -88.6206 70.7331ZM-88.6206 70.7331C-70.4092 68.2726 -41.8256 62.0254 -34.5791 61.548C-23.5419 60.8142 10.6526 56.8691 22.2695 54.6802C33.8864 52.4913 50.6645 49.5514 50.6645 49.5514C50.6645 49.5514 78.8346 39.3775 48.4084 40.4191C17.9746 41.4651 -59.2466 55.1765 -59.2466 55.1765L-76.0057 56.1637L-76.0177 56.1593M-45.9164 146.197C-35.5211 159.211 -17.0011 182.917 1.76312 209.4C30.1397 249.47 23.8202 242.647 40.655 264.716C57.4777 286.78 49.6231 267.033 45.6841 261.078C41.7493 255.131 31.0659 236.255 23.1997 224.349C18.9523 217.931 6.22676 200.721 -7.16354 182.725M-45.9164 146.197C-46.6469 144.944 -47.4241 143.617 -48.2534 142.185C-64.3168 114.454 -71.1003 100.804 -71.1003 100.804C-71.1003 100.804 -57.1745 103.261 -26.7464 129.089C3.67842 154.93 12.6009 166.971 17.4377 172.781C22.2822 178.587 36.394 203.712 13.0874 179.757C-10.2149 155.81 -28.8395 140.291 -37.1559 134.693C-39.8647 132.869 -43.5571 130.387 -47.196 127.716M-45.9164 146.197C-32.4187 169.238 -33.8978 164.015 -12.7676 197.211C9.5113 232.205 -14.8066 206.215 -19.1011 200.846C-23.4033 195.481 -43.2991 166.582 -56.3263 142.34C-66.9735 122.511 -77.4046 100.516 -80.8522 93.1454M-7.16354 182.725C-7.16788 182.717 -7.17224 182.708 -7.17224 182.708M-7.16354 182.725C-0.881026 187.089 8.53319 194.245 17.127 203.141C31.7081 218.231 43.5464 235.804 65.8418 257.724C88.1371 279.644 74.1935 258.15 70.1504 252.636C66.1074 247.122 28.7259 201.389 7.33145 183.43C-5.07247 173.017 -15.1887 166.814 -21.5052 163.446M-7.16354 182.725C-7.16354 182.725 -7.17986 182.712 -7.17224 182.708M-7.17224 182.708C-11.9864 176.234 -16.8919 169.654 -21.5052 163.446M-21.5052 163.446L-21.5095 163.437C-27.8865 154.863 -33.728 146.992 -38.0914 141.01C-41.8043 135.924 -44.7728 131.488 -47.196 127.716M-47.196 127.716C-55.3928 114.888 -57.1755 109.705 -59.6886 112.887C-61.9991 115.807 -54.7227 122.17 -47.196 127.716ZM-28.332 105.833C-21.3672 104.395 -9.02091 101.899 3.81906 99.5697L3.82669 99.5653M3.82669 99.5653C14.4532 97.6306 25.4027 95.8135 33.9086 94.8153C33.9086 94.8153 33.9086 94.8153 33.9163 94.8109M3.82669 99.5653C14.3996 93.0483 37.5367 79.7248 67.5793 67.8588C109.244 51.4101 136.58 61.8508 140.672 62.8698C144.759 63.88 153.976 68.6692 139.254 68.5322C124.525 68.3996 114.022 64.9656 84.2637 73.8958C62.733 80.3603 43.1258 89.9854 33.9163 94.8109M33.9163 94.8109C36.37 94.525 38.6158 94.3136 40.595 94.1766C62.0113 92.7052 132.774 96.1358 144.966 97.7251C157.158 99.3143 187.451 111.784 144.333 108.908C101.207 106.037 79.0784 105.426 71.389 104.361C69.5953 104.122 65.2247 104.375 59.5873 104.838M59.5873 104.838C50.7075 105.557 38.6993 106.781 28.7774 107.335M59.5873 104.838C79.3936 110.475 118.225 121.3 143.51 126.924C178.67 134.738 166.646 142.021 139.986 137.533C120.226 134.216 59.6025 114.685 28.7774 107.335M28.7774 107.335C17.9732 107.946 9.6255 107.765 10.3904 105.283C10.8887 103.684 18.0188 104.766 28.7774 107.335ZM11.5439 117.933C15.059 126.051 21.7672 140.732 28.6461 151.42C38.6507 166.959 77.3896 232.453 91.9038 251.173C106.418 269.893 113.183 274.99 97.9859 247.682C82.789 220.375 56.6813 181.618 50.0069 170.139C43.3292 158.673 33.9399 144.274 33.9399 144.274C33.9399 144.274 113.141 217.883 117.66 222.383C122.179 226.883 155.568 248.026 118.771 212.418C81.9774 176.797 60.55 156.624 44.0361 141.094C36.6984 134.194 30.3621 127.751 25.5786 122.718M108.052 158.286C115.754 177.392 136.675 228.419 149.967 251.993C166.492 281.322 186.354 312.103 188.588 315.299C190.831 318.49 212.835 339.825 193.013 309.774C173.191 279.722 158.865 260.692 142.859 226.217C132.296 203.444 122.392 177.858 116.878 163.098M124.904 167.717C130.433 163.725 144.943 154.466 166.75 149.425C195.08 142.864 233.914 137.748 255.949 135.551C277.984 133.354 282.927 141.349 253.256 144.561C223.59 147.782 193.003 153.764 179.579 156.238C166.159 158.721 151.277 163.525 144.618 165.854C140.327 167.351 135.242 170.247 132.164 172.115C138.383 183.979 192.264 275.487 211.695 297.558C231.135 319.625 223.197 303.652 219.509 297.552C215.833 291.457 200.592 267.351 183.118 242.675C165.639 217.991 149.401 189.238 148.064 185.897C147.405 184.255 147.539 183.539 148.955 183.276C150.398 182.986 153.184 183.172 157.839 183.273C161.681 183.357 167.918 183.549 175.345 183.888M175.345 183.888C185.657 184.356 198.247 185.111 209.824 186.29C229.721 188.306 254.711 190.754 285.74 202.062C316.769 213.369 302.64 201.319 288.248 194.651C273.856 187.983 258.125 183.195 230.894 179.529C203.663 175.864 168.338 174.262 156.654 174.996C150.812 175.363 144.826 176.386 140.273 177.315M175.345 183.888C184.525 188.957 199.707 197.035 210.814 201.39C227.811 208.056 253.455 215.742 271.715 224.298C289.967 232.859 309.806 249.836 312.233 251.429C314.652 253.026 327.575 269.864 307.739 258.116C287.891 246.363 289.3 245.925 267.497 234.183C252.552 226.126 219.191 212.925 192.48 203.427M162.339 193.53C169.37 195.478 180.221 199.06 192.48 203.427M192.48 203.427C202.244 209.789 214.719 218.926 226.12 230.218C249.379 253.269 272.683 279.347 292.857 304.864C313.032 330.381 289.462 313.761 285.251 309.23C281.048 304.694 265.367 284.298 238.42 254.968C223.415 238.651 203.681 226.833 190.187 218.504M190.187 218.504C185.123 209.3 180.348 199.75 175.354 204.76C172.653 207.466 179.447 211.873 190.187 218.504ZM190.187 218.504C191.3 220.526 192.423 222.53 193.565 224.355C199.922 234.524 210.894 251.36 221.677 264.207C232.46 277.055 244.602 288.381 262.406 306.526C280.218 324.667 264.71 316.405 259.723 312.915C254.733 309.437 243.708 302.33 216.979 269.518C190.251 236.707 169.105 204.643 169.105 204.643\",\n    stroke: \"#233000\",\n    strokeMiterlimit: 10\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgRosemarySecond);\nexport default __webpack_public_path__ + \"static/media/rosemary_second.4e873b8ca5d6f0b45a19d49e237cdbfd.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\nimport rosemarysvg from '../../assets/images/svg/rosemary.svg';\nimport rosemarysecondsvg from '../../assets/images/svg/rosemary_second.svg';\n\nexport const SectionProcess = styled.section`\n  position: relative;\n  padding-top: 167px;\n  padding-bottom: 320px;\n`;\n\nexport const BackgroundImage1 = styled.div`\n  position: absolute;\n  top: 7px;\n  right: 0;\n  width: 50%;\n  height: 100%;\n  background-image: url(${rosemarysvg});\n  background-position: top right;\n  background-repeat: no-repeat;\n`;\n\nexport const BackgroundImage2 = styled.div`\n  position: absolute;\n  bottom: 32px;\n  left: 0;\n  width: 50%;\n  height: 100%;\n  background-image: url(${rosemarysecondsvg});\n  background-repeat: no-repeat;\n  background-position: bottom left;\n`;\n\nexport const ProcessContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 118px;\n  z-index: 1;\n`;\n\nexport const FirstProcWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 102px;\n`;\n\nexport const SecondHeading = styled.h2`\n  font-family: 'RufinaBold';\n  font-weight: 700;\n  font-size: 108px;\n  line-height: 120px;\n  text-align: center;\n  margin-bottom: 174px;\n`;\n\nexport const SliceWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 28px;\n  padding-top: 155px;\n\n  p {\n    width: 616px;\n    color: ${({ theme }) => theme.colors.grey};\n  }\n`;\n\nexport const ThirdHeading = styled.h3`\n  font-weight: 700;\n  font-size: 88px;\n  line-height: 120%;\n`;\n\nexport const SecondWrap = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 274px;\n`;\n\nexport const BakeWrap = styled.div`\n  padding-left: 71px;\n  padding-top: 161px;\n\n  h3 {\n    margin-bottom: 21px;\n  }\n\n  p {\n    color: ${({ theme }) => theme.colors.grey};\n    margin-bottom: 46px;\n  }\n`;\n\nexport const PickledWrap = styled.div`\n  h3 {\n    margin-bottom: 28px;\n  }\n\n  p {\n    color: ${({ theme }) => theme.colors.grey};\n  }\n\n  img {\n    margin-bottom: 46px;\n  }\n`;\n","import React from 'react';\nimport Container from '../Container/Container';\nimport {\n  BackgroundImage1,\n  BackgroundImage2,\n  BakeWrap,\n  FirstProcWrap,\n  PickledWrap,\n  ProcessContainer,\n  SecondHeading,\n  SecondWrap,\n  SectionProcess,\n  SliceWrap,\n  ThirdHeading,\n} from './ProcessSectionStyled';\nimport { Text } from '../Hero/HeroStyled';\nimport cookMeatImgWebp from '../../assets/images/cook_meat_webp.webp';\nimport cookMeatImgWebpMob from '../../assets/images/cook_meat_webp@2x.webp';\nimport cookMeatImg from '../../assets/images/cook_meat.jpg';\nimport cookMeatImgMob from '../../assets/images/cook_meat@2x.jpg';\n\nimport steakImgWebp from '../../assets/images/steak_img_webp.webp';\nimport steakImgWebpMob from '../../assets/images/steak_img_webp@2x.webp';\nimport steakImg from '../../assets/images/steak_img.jpg';\nimport steakImgMob from '../../assets/images/steak_img@2x.jpg';\n\nimport meatImgWebp from '../../assets/images/meat_webp.webp';\nimport meatImgWebpMob from '../../assets/images/meat_webp@2x.webp';\nimport meatImg from '../../assets/images/meat.jpg';\nimport meatImgMob from '../../assets/images/meat@2x.jpg';\n\nexport const ProcessSection = () => {\n  return (\n    <SectionProcess>\n      <BackgroundImage1 />\n      <BackgroundImage2 />\n      <Container variant=\"other\">\n        <SecondHeading>Sophisticated Process</SecondHeading>\n        <ProcessContainer>\n          <FirstProcWrap>\n            <picture>\n              <source\n                media=\"(min-width: 320px)\"\n                srcSet={`${cookMeatImgWebp} 1x, ${cookMeatImgWebpMob} 2x`}\n                type=\"image/webp\"\n              />\n              <source\n                media=\"(min-width: 320px)\"\n                srcSet={`${cookMeatImg} 1x, ${cookMeatImgMob} 2x`}\n                type=\"image/png\"\n              />\n              <img src={cookMeatImg} alt=\"hero_image\" loading=\"lazy\" />\n            </picture>\n            <SliceWrap>\n              <ThirdHeading>01.Slice</ThirdHeading>\n              <Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus\n                lorem id penatibus imperdiet. Turpis egestas ultricies purus\n                auctor tincidunt lacus nunc. Convallis pellentesque quis\n                fringilla sagittis. Egestas in risus sit nunc nunc, arcu donec\n                nam etiam.{' '}\n              </Text>\n            </SliceWrap>\n          </FirstProcWrap>\n          <SecondWrap>\n            <BakeWrap>\n              <ThirdHeading>03.Bake</ThirdHeading>\n              <Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus\n                lorem id penatibus imperdiet.\n              </Text>\n              <picture>\n                <source\n                  media=\"(min-width: 320px)\"\n                  srcSet={`${meatImgWebp} 1x, ${meatImgWebpMob} 2x`}\n                  type=\"image/webp\"\n                />\n                <source\n                  media=\"(min-width: 320px)\"\n                  srcSet={`${meatImg} 1x, ${meatImgMob} 2x`}\n                  type=\"image/png\"\n                />\n                <img src={meatImg} alt=\"hero_image\" loading=\"lazy\" />\n              </picture>\n            </BakeWrap>\n            <PickledWrap>\n              <picture>\n                <source\n                  media=\"(min-width: 320px)\"\n                  srcSet={`${steakImgWebp} 1x, ${steakImgWebpMob} 2x`}\n                  type=\"image/webp\"\n                />\n                <source\n                  media=\"(min-width: 320px)\"\n                  srcSet={`${steakImg} 1x, ${steakImgMob} 2x`}\n                  type=\"image/png\"\n                />\n                <img src={steakImg} alt=\"hero_image\" loading=\"lazy\" />\n              </picture>\n              <ThirdHeading>02.Pickled</ThirdHeading>\n              <Text>\n                Lorem ipsum dolor sit amet, consectetur adipiscing elit. Purus\n                lorem id penatibus imperdiet.\n              </Text>\n            </PickledWrap>\n          </SecondWrap>\n        </ProcessContainer>\n      </Container>\n    </SectionProcess>\n  );\n};\n","import { AboutHero } from '../components/Hero/AboutHero/AboutHero';\nimport { OurStorySection } from '../components/OurStorySection/OurStorySection';\nimport { StaffSection } from '../components/StaffSection/StaffSection';\nimport Video from '../components/Video/Video';\nimport { ProcessSection } from '../components/ProcessSection/ProcessSection';\nimport ReservationSection from '../components/ReservationSection/ReservationSection';\n\nconst About = () => {\n  return (\n    <main>\n      <AboutHero />\n      <OurStorySection />\n      <StaffSection />\n      <Video />\n      <ProcessSection />\n      <ReservationSection />\n    </main>\n  );\n};\n\nexport default About;\n"],"names":["HeroWrapper","styled","section","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","primaryBackground","MainImageWrap","div","_templateObject2","Title","h1","_templateObject3","_ref2","white","Text","p","_templateObject4","_ref3","SpicesImgWrapper","_templateObject5","Wrapper","_templateObject6","MainTextWrap","_templateObject7","SecondWrap","_templateObject8","_ref4","SecondText","_templateObject9","_ref5","PlanWrapper","_templateObject10","ThirdWrapper","_templateObject11","SectionMenu","menuimg","menuimg2x","TitleMenu","h2","TitleMenuWrap","ListMenu","ul","grey","PriceText","black","DottsLine","SecondTitleMenu","h3","ReservationSect","lightOlive","mintsvg","ReservWrap","initialValues","firstName","lastName","email","phone","date","Date","time","numberOfPeople","ReservationForm","selectedDate","setSelectedDate","useState","selectedTime","setSelectedTime","dispatch","useAppDispatch","_jsx","Formik","onSubmit","async","values","resetForm","userData","toLocaleTimeString","hour","minute","sendUserReservation","validationSchema","validationBooking","children","errors","touched","_jsxs","FormWrapper","WrapperInputs","WrapperInput","Input","variant","type","id","name","placeholder","$error","StyledError","component","StyledDateWrapper","DatePicker","selected","onChange","minDate","dateFormat","CalendarGlobalStyles","showTimeSelect","showTimeSelectOnly","timeIntervals","timeCaption","minTime","maxTime","setHours","StyledSelect","map","num","value","StyledBtn","ReservationSection","Container","HeroAboutSection","heroAboutImg","AboutHero","StorySection","tomatosvg","StoryContainer","StoryWrap","OurStorySection","media","srcSet","concat","storyImgWebp","storyImgWebpMob","storyImg","storyImgMob","src","alt","loading","SectionStaff","StaffContainer","FirstContainer","FirstWrap","ThirdHeading","StaffSection","managerImgWebp","managerImgWebpMob","managerImg","managerImgMob","style","color","marginLeft","textAlign","width","gap","marginTop","chefImgWebp","chefImgWebpMob","chefImg","chefImgMob","Video","padding","position","title","top","left","height","frameBorder","allow","allowFullScreen","SectionProcess","BackgroundImage1","rosemarysvg","BackgroundImage2","rosemarysecondsvg","ProcessContainer","FirstProcWrap","SecondHeading","SliceWrap","BakeWrap","PickledWrap","ProcessSection","cookMeatImgWebp","cookMeatImgWebpMob","cookMeatImg","cookMeatImgMob","meatImgWebp","meatImgWebpMob","meatImg","meatImgMob","steakImgWebp","steakImgWebpMob","steakImg","steakImgMob","About"],"sourceRoot":""}